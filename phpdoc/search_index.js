var search_data = {
    'index': {
        'searchIndex': ["httpfundamental","httpfundamental\\contenttype","httpfundamental\\contenttype","httpfundamental\\contenttypeinterface","httpfundamental\\contenttype\\html","httpfundamental\\contenttype\\json","httpfundamental\\contenttype\\plaintext","httpfundamental\\contenttype\\xml","httpfundamental\\cookie","httpfundamental\\httpstatus","httpfundamental\\request","httpfundamental\\response","httpfundamental\\contenttype::createfromcontent","httpfundamental\\contenttype::guesscontenttype","httpfundamental\\contenttype::__construct","httpfundamental\\contenttype::__tostring","httpfundamental\\contenttype::setcontenttype","httpfundamental\\contenttype::getcontenttype","httpfundamental\\contenttype::setcontenttypeobject","httpfundamental\\contenttype::getcontenttypeobject","httpfundamental\\contenttype::preparecontenttype","httpfundamental\\contenttype::prepareresponse","httpfundamental\\contenttype::parsecontent","httpfundamental\\contenttype::preparecontent","httpfundamental\\contenttypeinterface::prepareresponse","httpfundamental\\contenttypeinterface::parsecontent","httpfundamental\\contenttypeinterface::preparecontent","httpfundamental\\contenttypeinterface::getcontenttype","httpfundamental\\contenttype\\html::prepareresponse","httpfundamental\\contenttype\\html::parsecontent","httpfundamental\\contenttype\\html::preparecontent","httpfundamental\\contenttype\\html::getcontenttype","httpfundamental\\contenttype\\json::prepareresponse","httpfundamental\\contenttype\\json::parsecontent","httpfundamental\\contenttype\\json::preparecontent","httpfundamental\\contenttype\\json::getcontenttype","httpfundamental\\contenttype\\plaintext::prepareresponse","httpfundamental\\contenttype\\plaintext::parsecontent","httpfundamental\\contenttype\\plaintext::preparecontent","httpfundamental\\contenttype\\plaintext::getcontenttype","httpfundamental\\contenttype\\xml::prepareresponse","httpfundamental\\contenttype\\xml::parsecontent","httpfundamental\\contenttype\\xml::preparecontent","httpfundamental\\contenttype\\xml::getcontenttype","httpfundamental\\cookie::__construct","httpfundamental\\cookie::setflag","httpfundamental\\cookie::getflag","httpfundamental\\cookie::setname","httpfundamental\\cookie::getname","httpfundamental\\cookie::setvalue","httpfundamental\\cookie::getvalue","httpfundamental\\cookie::getsafevalue","httpfundamental\\cookie::setexpire","httpfundamental\\cookie::getexpire","httpfundamental\\cookie::getsafeexpire","httpfundamental\\cookie::setpath","httpfundamental\\cookie::getpath","httpfundamental\\cookie::getsafepath","httpfundamental\\cookie::setdomain","httpfundamental\\cookie::getdomain","httpfundamental\\cookie::getsafedomain","httpfundamental\\cookie::setsecure","httpfundamental\\cookie::getsecure","httpfundamental\\cookie::getsafesecure","httpfundamental\\cookie::sethttponly","httpfundamental\\cookie::gethttponly","httpfundamental\\cookie::getsafehttponly","httpfundamental\\cookie::sendasraw","httpfundamental\\cookie::sendasencoded","httpfundamental\\cookie::setcookiefuncarguments","httpfundamental\\cookie::getcookiefuncarguments","httpfundamental\\cookie::getcookiefuncargument","httpfundamental\\cookie::addcookiefuncargument","httpfundamental\\cookie::clearcookiefuncargument","httpfundamental\\cookie::exists","httpfundamental\\cookie::read","httpfundamental\\cookie::send","httpfundamental\\cookie::addincookie","httpfundamental\\cookie::clear","httpfundamental\\request::create","httpfundamental\\request::__construct","httpfundamental\\request::guessfromcurrent","httpfundamental\\request::setflag","httpfundamental\\request::getflag","httpfundamental\\request::seturl","httpfundamental\\request::geturl","httpfundamental\\request::setprotocol","httpfundamental\\request::getprotocol","httpfundamental\\request::setmethod","httpfundamental\\request::getmethod","httpfundamental\\request::setheaders","httpfundamental\\request::getheaders","httpfundamental\\request::getheader","httpfundamental\\request::setarguments","httpfundamental\\request::getarguments","httpfundamental\\request::getargument","httpfundamental\\request::setdata","httpfundamental\\request::getdata","httpfundamental\\request::setfiles","httpfundamental\\request::getfiles","httpfundamental\\request::getfile","httpfundamental\\request::setsession","httpfundamental\\request::getsession","httpfundamental\\request::setcookies","httpfundamental\\request::getcookies","httpfundamental\\request::getcookie","httpfundamental\\request::setauthentication","httpfundamental\\request::setauthenticationtype","httpfundamental\\request::setauthenticationuser","httpfundamental\\request::setauthenticationpassword","httpfundamental\\request::getauthentication","httpfundamental\\request::buildurl","httpfundamental\\request::isajax","httpfundamental\\request::iscli","httpfundamental\\request::isget","httpfundamental\\request::ispost","httpfundamental\\request::isput","httpfundamental\\request::getget","httpfundamental\\request::getpost","httpfundamental\\request::getgetorpost","httpfundamental\\request::getpostorget","httpfundamental\\request::cleanargument","httpfundamental\\request::getenvironment","httpfundamental\\request::getreferer","httpfundamental\\request::getclientip","httpfundamental\\request::getallheaders","httpfundamental\\response::__construct","httpfundamental\\response::__tostring","httpfundamental\\response::setprotocol","httpfundamental\\response::getprotocol","httpfundamental\\response::setstatus","httpfundamental\\response::getstatus","httpfundamental\\response::setcharset","httpfundamental\\response::getcharset","httpfundamental\\response::addcontent","httpfundamental\\response::setcontents","httpfundamental\\response::getcontent","httpfundamental\\response::getcontents","httpfundamental\\response::getcontentsasstring","httpfundamental\\response::setcontenttype","httpfundamental\\response::getcontenttype","httpfundamental\\response::guesscontenttype","httpfundamental\\response::setheaders","httpfundamental\\response::addheader","httpfundamental\\response::getheaders","httpfundamental\\response::getheader","httpfundamental\\response::hasheader","httpfundamental\\response::renderheaders","httpfundamental\\response::header","httpfundamental\\response::send","httpfundamental\\response::download","httpfundamental\\response::flush","httpfundamental\\response::redirect"],
        'info': [["HttpFundamental","","HttpFundamental.html","","",3],["HttpFundamental\\ContentType","","HttpFundamental\/ContentType.html","","",3],["ContentType","HttpFundamental","HttpFundamental\/ContentType.html","","",1],["ContentTypeInterface","HttpFundamental","HttpFundamental\/ContentTypeInterface.html","","",1],["Html","HttpFundamental\\ContentType","HttpFundamental\/ContentType\/Html.html","","",1],["Json","HttpFundamental\\ContentType","HttpFundamental\/ContentType\/Json.html","","",1],["PlainText","HttpFundamental\\ContentType","HttpFundamental\/ContentType\/PlainText.html","","",1],["Xml","HttpFundamental\\ContentType","HttpFundamental\/ContentType\/Xml.html","","",1],["Cookie","HttpFundamental","HttpFundamental\/Cookie.html","","",1],["HttpStatus","HttpFundamental","HttpFundamental\/HttpStatus.html","","List of HTTP status codes  This class only defines",1],["Request","HttpFundamental","HttpFundamental\/Request.html","","The global request class",1],["Response","HttpFundamental","HttpFundamental\/Response.html","","The global HTTP response class",1],["ContentType::createFromContent","HttpFundamental\\ContentType","HttpFundamental\/ContentType.html#method_createFromContent","(string $content)","Create a new ContentType object extracting the type",2],["ContentType::guessContentType","HttpFundamental\\ContentType","HttpFundamental\/ContentType.html#method_guessContentType","(string $content)","",2],["ContentType::__construct","HttpFundamental\\ContentType","HttpFundamental\/ContentType.html#method___construct","(string $content_type)","Constructor : defines the current URL and gets the",2],["ContentType::__toString","HttpFundamental\\ContentType","HttpFundamental\/ContentType.html#method___toString","()","",2],["ContentType::setContentType","HttpFundamental\\ContentType","HttpFundamental\/ContentType.html#method_setContentType","(string $content_type)","",2],["ContentType::getContentType","HttpFundamental\\ContentType","HttpFundamental\/ContentType.html#method_getContentType","()","",2],["ContentType::setContentTypeObject","HttpFundamental\\ContentType","HttpFundamental\/ContentType.html#method_setContentTypeObject","(<a href=\"HttpFundamental\/ContentTypeInterface.html\"><abbr title=\"HttpFundamental\\ContentTypeInterface\">ContentTypeInterface<\/abbr><\/a> $content_type_object)","",2],["ContentType::getContentTypeObject","HttpFundamental\\ContentType","HttpFundamental\/ContentType.html#method_getContentTypeObject","()","",2],["ContentType::prepareContentType","HttpFundamental\\ContentType","HttpFundamental\/ContentType.html#method_prepareContentType","(string $content_type)","",2],["ContentType::prepareResponse","HttpFundamental\\ContentType","HttpFundamental\/ContentType.html#method_prepareResponse","(<a href=\"HttpFundamental\/Response.html\"><abbr title=\"HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["ContentType::parseContent","HttpFundamental\\ContentType","HttpFundamental\/ContentType.html#method_parseContent","(string $content)","Parse an input content",2],["ContentType::prepareContent","HttpFundamental\\ContentType","HttpFundamental\/ContentType.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["ContentTypeInterface::prepareResponse","HttpFundamental\\ContentTypeInterface","HttpFundamental\/ContentTypeInterface.html#method_prepareResponse","(<a href=\"HttpFundamental\/Response.html\"><abbr title=\"HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["ContentTypeInterface::parseContent","HttpFundamental\\ContentTypeInterface","HttpFundamental\/ContentTypeInterface.html#method_parseContent","(string $content)","Parse an input content",2],["ContentTypeInterface::prepareContent","HttpFundamental\\ContentTypeInterface","HttpFundamental\/ContentTypeInterface.html#method_prepareContent","(string|array $content)","Prepare a content for output",2],["ContentTypeInterface::getContentType","HttpFundamental\\ContentTypeInterface","HttpFundamental\/ContentTypeInterface.html#method_getContentType","()","Get the \"content-Type\" header value",2],["Html::prepareResponse","HttpFundamental\\ContentType\\Html","HttpFundamental\/ContentType\/Html.html#method_prepareResponse","(<a href=\"HttpFundamental\/Response.html\"><abbr title=\"HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["Html::parseContent","HttpFundamental\\ContentType\\Html","HttpFundamental\/ContentType\/Html.html#method_parseContent","(string $content)","Parse an input content",2],["Html::prepareContent","HttpFundamental\\ContentType\\Html","HttpFundamental\/ContentType\/Html.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["Html::getContentType","HttpFundamental\\ContentType\\Html","HttpFundamental\/ContentType\/Html.html#method_getContentType","()","Get the \"content-Type\" header value",2],["Json::prepareResponse","HttpFundamental\\ContentType\\Json","HttpFundamental\/ContentType\/Json.html#method_prepareResponse","(<a href=\"HttpFundamental\/Response.html\"><abbr title=\"HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["Json::parseContent","HttpFundamental\\ContentType\\Json","HttpFundamental\/ContentType\/Json.html#method_parseContent","(string $content)","Parse an input content",2],["Json::prepareContent","HttpFundamental\\ContentType\\Json","HttpFundamental\/ContentType\/Json.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["Json::getContentType","HttpFundamental\\ContentType\\Json","HttpFundamental\/ContentType\/Json.html#method_getContentType","()","Get the \"content-Type\" header value",2],["PlainText::prepareResponse","HttpFundamental\\ContentType\\PlainText","HttpFundamental\/ContentType\/PlainText.html#method_prepareResponse","(<a href=\"HttpFundamental\/Response.html\"><abbr title=\"HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["PlainText::parseContent","HttpFundamental\\ContentType\\PlainText","HttpFundamental\/ContentType\/PlainText.html#method_parseContent","(string $content)","Parse an input content",2],["PlainText::prepareContent","HttpFundamental\\ContentType\\PlainText","HttpFundamental\/ContentType\/PlainText.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["PlainText::getContentType","HttpFundamental\\ContentType\\PlainText","HttpFundamental\/ContentType\/PlainText.html#method_getContentType","()","Get the \"content-Type\" header value",2],["Xml::prepareResponse","HttpFundamental\\ContentType\\Xml","HttpFundamental\/ContentType\/Xml.html#method_prepareResponse","(<a href=\"HttpFundamental\/Response.html\"><abbr title=\"HttpFundamental\\Response\">Response<\/abbr><\/a> $response)","Prepare the content of the response before to send",2],["Xml::parseContent","HttpFundamental\\ContentType\\Xml","HttpFundamental\/ContentType\/Xml.html#method_parseContent","(string $content)","Parse an input content",2],["Xml::prepareContent","HttpFundamental\\ContentType\\Xml","HttpFundamental\/ContentType\/Xml.html#method_prepareContent","(mixed $content)","Prepare a content for output",2],["Xml::getContentType","HttpFundamental\\ContentType\\Xml","HttpFundamental\/ContentType\/Xml.html#method_getContentType","()","Get the \"content-Type\" header value",2],["Cookie::__construct","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method___construct","(string $cookie_name = null, string|array $cookie_value = null, int $flag = self::FLATNESS_ARRAY)","",2],["Cookie::setFlag","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_setFlag","(int $flag)","",2],["Cookie::getFlag","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getFlag","()","",2],["Cookie::setName","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_setName","(string $name)","",2],["Cookie::getName","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getName","()","",2],["Cookie::setValue","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_setValue","(string $value)","",2],["Cookie::getValue","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getValue","()","",2],["Cookie::getSafeValue","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getSafeValue","()","",2],["Cookie::setExpire","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_setExpire","(int $expire)","",2],["Cookie::getExpire","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getExpire","()","",2],["Cookie::getSafeExpire","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getSafeExpire","()","",2],["Cookie::setPath","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_setPath","(string $path)","",2],["Cookie::getPath","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getPath","()","",2],["Cookie::getSafePath","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getSafePath","()","",2],["Cookie::setDomain","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_setDomain","(string $domain)","",2],["Cookie::getDomain","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getDomain","()","",2],["Cookie::getSafeDomain","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getSafeDomain","()","",2],["Cookie::setSecure","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_setSecure","(string $secure)","",2],["Cookie::getSecure","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getSecure","()","",2],["Cookie::getSafeSecure","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getSafeSecure","()","",2],["Cookie::setHttponly","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_setHttponly","(string $https)","",2],["Cookie::getHttponly","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getHttponly","()","",2],["Cookie::getSafeHttponly","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getSafeHttponly","()","",2],["Cookie::sendAsRaw","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_sendAsRaw","()","",2],["Cookie::sendAsEncoded","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_sendAsEncoded","()","",2],["Cookie::setCookieFuncArguments","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_setCookieFuncArguments","(array $args)","",2],["Cookie::getCookieFuncArguments","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getCookieFuncArguments","(bool $organize = true)","",2],["Cookie::getCookieFuncArgument","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_getCookieFuncArgument","(string $var)","",2],["Cookie::addCookieFuncArgument","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_addCookieFuncArgument","(string $var, mixed $val)","",2],["Cookie::clearCookieFuncArgument","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_clearCookieFuncArgument","(string $var)","",2],["Cookie::exists","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_exists","(string $cookie_name = null)","Test if a cookie exists",2],["Cookie::read","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_read","(string $cookie_name = null)","Get a cookie value",2],["Cookie::send","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_send","(string $cookie_name = null, string|array $cookie_value = null)","Set a cookie value",2],["Cookie::addInCookie","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_addInCookie","(string $variable_name, string $variable_value, string $cookie_name = null)","Add a variable value in a cookie",2],["Cookie::clear","HttpFundamental\\Cookie","HttpFundamental\/Cookie.html#method_clear","(string $cookie_name = null)","Clear a cookie",2],["Request::create","HttpFundamental\\Request","HttpFundamental\/Request.html#method_create","(string $url = null, int $flag = self::NO_REWRITE, string $protocol = &#039;http&#039;, string $method = &#039;get&#039;, array $headers = null, array $arguments = null, array $data = null, array $session = null, array $files = null, array $cookies = null)","Static constructor : defines the current URL and gets",2],["Request::__construct","HttpFundamental\\Request","HttpFundamental\/Request.html#method___construct","(string $url = null, int $flag = self::NO_REWRITE)","Constructor : defines the request URL and the object",2],["Request::guessFromCurrent","HttpFundamental\\Request","HttpFundamental\/Request.html#method_guessFromCurrent","()","Populate the request object with current HTTP request",2],["Request::setFlag","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setFlag","(int $flag)","",2],["Request::getFlag","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getFlag","()","",2],["Request::setUrl","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setUrl","(string $url)","",2],["Request::getUrl","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getUrl","()","",2],["Request::setProtocol","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setProtocol","(string $protocol)","",2],["Request::getProtocol","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getProtocol","()","",2],["Request::setMethod","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setMethod","(string $method)","",2],["Request::getMethod","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getMethod","()","",2],["Request::setHeaders","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setHeaders","(array $headers = null)","",2],["Request::getHeaders","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getHeaders","()","",2],["Request::getHeader","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getHeader","(string $name)","",2],["Request::setArguments","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setArguments","(string|array $arguments = null)","",2],["Request::getArguments","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getArguments","(bool $clean = true, int $clean_flags = ENT_COMPAT, string $clean_encoding = &#039;UTF-8&#039;)","",2],["Request::getArgument","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getArgument","(string $param = null, mixed $default = false, bool $clean = true, int $clean_flags = ENT_COMPAT, string $clean_encoding = &#039;UTF-8&#039;)","",2],["Request::setData","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setData","(array|string $data = null)","",2],["Request::getData","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getData","(string $param = null, mixed $default = false, bool $clean = true, int $clean_flags = ENT_COMPAT, string $clean_encoding = &#039;UTF-8&#039;)","",2],["Request::setFiles","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setFiles","(array $files = null)","",2],["Request::getFiles","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getFiles","()","",2],["Request::getFile","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getFile","(string $param, string $index = null)","",2],["Request::setSession","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setSession","(array $session = null)","",2],["Request::getSession","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getSession","(string $param = null)","",2],["Request::setCookies","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setCookies","(array $cookies = null)","",2],["Request::getCookies","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getCookies","()","",2],["Request::getCookie","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getCookie","(string $param)","",2],["Request::setAuthentication","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setAuthentication","(array $authentication = null)","",2],["Request::setAuthenticationType","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setAuthenticationType","(string $type)","",2],["Request::setAuthenticationUser","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setAuthenticationUser","(string $user)","",2],["Request::setAuthenticationPassword","HttpFundamental\\Request","HttpFundamental\/Request.html#method_setAuthenticationPassword","(string $pw)","",2],["Request::getAuthentication","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getAuthentication","(string $param = null)","",2],["Request::buildUrl","HttpFundamental\\Request","HttpFundamental\/Request.html#method_buildUrl","()","",2],["Request::isAjax","HttpFundamental\\Request","HttpFundamental\/Request.html#method_isAjax","()","",2],["Request::isCli","HttpFundamental\\Request","HttpFundamental\/Request.html#method_isCli","()","",2],["Request::isGet","HttpFundamental\\Request","HttpFundamental\/Request.html#method_isGet","()","",2],["Request::isPost","HttpFundamental\\Request","HttpFundamental\/Request.html#method_isPost","()","",2],["Request::isPut","HttpFundamental\\Request","HttpFundamental\/Request.html#method_isPut","()","",2],["Request::getGet","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getGet","(string $varname, mixed $default = null)","",2],["Request::getPost","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getPost","(string $varname, mixed $default = null)","",2],["Request::getGetOrPost","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getGetOrPost","(string $varname, mixed $default = null)","",2],["Request::getPostOrGet","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getPostOrGet","(string $varname, mixed $default = null)","",2],["Request::cleanArgument","HttpFundamental\\Request","HttpFundamental\/Request.html#method_cleanArgument","(string $arg_value, int $flags = ENT_COMPAT, string $encoding = &#039;UTF-8&#039;)","Clean the value taken from request arguments or data",2],["Request::getEnvironment","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getEnvironment","(string $varname)","",2],["Request::getReferer","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getReferer","()","Get the current request referer if available",2],["Request::getClientIp","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getClientIp","()","",2],["Request::getallheaders","HttpFundamental\\Request","HttpFundamental\/Request.html#method_getallheaders","()","Emulation of internal `getallheaders()` function as",2],["Response::__construct","HttpFundamental\\Response","HttpFundamental\/Response.html#method___construct","(string|null $content = null, string|null $charset = null)","Constructor : defines the current URL and gets the",2],["Response::__toString","HttpFundamental\\Response","HttpFundamental\/Response.html#method___toString","()","",2],["Response::setProtocol","HttpFundamental\\Response","HttpFundamental\/Response.html#method_setProtocol","(<abbr title=\"HttpFundamental\\$value\">$value<\/abbr> $value)","",2],["Response::getProtocol","HttpFundamental\\Response","HttpFundamental\/Response.html#method_getProtocol","()","",2],["Response::setStatus","HttpFundamental\\Response","HttpFundamental\/Response.html#method_setStatus","(<abbr title=\"HttpFundamental\\$flag\">$flag<\/abbr> $flag)","",2],["Response::getStatus","HttpFundamental\\Response","HttpFundamental\/Response.html#method_getStatus","()","",2],["Response::setCharset","HttpFundamental\\Response","HttpFundamental\/Response.html#method_setCharset","(<abbr title=\"HttpFundamental\\$string\">$string<\/abbr> $string)","",2],["Response::getCharset","HttpFundamental\\Response","HttpFundamental\/Response.html#method_getCharset","()","",2],["Response::addContent","HttpFundamental\\Response","HttpFundamental\/Response.html#method_addContent","(string $name, mixed $content)","",2],["Response::setContents","HttpFundamental\\Response","HttpFundamental\/Response.html#method_setContents","(array $contents)","",2],["Response::getContent","HttpFundamental\\Response","HttpFundamental\/Response.html#method_getContent","(<abbr title=\"HttpFundamental\\$name\">$name<\/abbr> $name, null $default = null)","",2],["Response::getContents","HttpFundamental\\Response","HttpFundamental\/Response.html#method_getContents","()","",2],["Response::getContentsAsString","HttpFundamental\\Response","HttpFundamental\/Response.html#method_getContentsAsString","()","",2],["Response::setContentType","HttpFundamental\\Response","HttpFundamental\/Response.html#method_setContentType","(string $type)","",2],["Response::getContentType","HttpFundamental\\Response","HttpFundamental\/Response.html#method_getContentType","()","",2],["Response::guessContentType","HttpFundamental\\Response","HttpFundamental\/Response.html#method_guessContentType","()","",2],["Response::setHeaders","HttpFundamental\\Response","HttpFundamental\/Response.html#method_setHeaders","(array $params)","",2],["Response::addHeader","HttpFundamental\\Response","HttpFundamental\/Response.html#method_addHeader","(string $name, string $value = null)","",2],["Response::getHeaders","HttpFundamental\\Response","HttpFundamental\/Response.html#method_getHeaders","()","",2],["Response::getHeader","HttpFundamental\\Response","HttpFundamental\/Response.html#method_getHeader","(string $name)","",2],["Response::hasHeader","HttpFundamental\\Response","HttpFundamental\/Response.html#method_hasHeader","(string $name)","",2],["Response::renderHeaders","HttpFundamental\\Response","HttpFundamental\/Response.html#method_renderHeaders","()","",2],["Response::header","HttpFundamental\\Response","HttpFundamental\/Response.html#method_header","(string $str)","Writes a header string if headers had not been sent",2],["Response::send","HttpFundamental\\Response","HttpFundamental\/Response.html#method_send","(null $content = null, null $type = null, bool $return_string = false)","Send the response to the device",2],["Response::download","HttpFundamental\\Response","HttpFundamental\/Response.html#method_download","(null $file = null, null $type = null, null $file_name = null)","Force client to download a file",2],["Response::flush","HttpFundamental\\Response","HttpFundamental\/Response.html#method_flush","(null $file_content = null, null $type = null)","Flush (display) a file content",2],["Response::redirect","HttpFundamental\\Response","HttpFundamental\/Response.html#method_redirect","(string $url, bool $permanent = false)","",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']